generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum Role {
  USER
  ADMIN
}

model User {
  id       String  @id @default(cuid())
  name     String?
  username String?
  email    String  @unique
  password String?

  emailVerified DateTime?
  image         String?
  role          Role      @default(USER)
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}
model Inquiry {
  id        String   @id @default(uuid())
  name      String
  phone     String
  message   String
  isAgreed  Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}enum PopupType {
  TEXT
  IMAGE
}

model Popup {
  id String @id @default(cuid())

  type PopupType @default(TEXT)

  title   String?
  content String?

  popupImage   PopupImage?
  popupImageId String?     @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PopupImage {
  id        String   @id @default(cuid())
  imageUrl  String
  width     Int      @default(0)
  height    Int      @default(0)
  popupId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  popup Popup @relation(fields: [popupId], references: [id], onDelete: Cascade)

  @@unique([popupId])
}
